(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{379:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"文件读写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件读写"}},[t._v("#")]),t._v(" 文件读写")]),t._v(" "),e("h2",{attrs:{id:"与输入输出操作相关的类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#与输入输出操作相关的类"}},[t._v("#")]),t._v(" 与输入输出操作相关的类")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/Francis-xsc/vuepress_imgs/master/img/image-20201004002216300.png",alt:"image-20201004002216300"}})]),t._v(" "),e("h2",{attrs:{id:"标准流对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标准流对象"}},[t._v("#")]),t._v(" 标准流对象")]),t._v(" "),e("p",[t._v("输入流对象:cin 与标准输入设备相连")]),t._v(" "),e("p",[t._v("输出流对象:cout 与标准输出设备相连")]),t._v(" "),e("p",[t._v("​\t\t\t\t\tcerr 与标准错误输出设备相连")]),t._v(" "),e("p",[t._v("​\t\t\t\t\tclog 与标准错误输出设备相连")]),t._v(" "),e("p",[t._v("缺省情况下")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('cerr<<"Hello,world"<<endl;\nclog<<"Hello,world"<<endl;\ncout<<"Hello,world"<<endl;//一样\n')])])]),e("p",[t._v("cin对应于标准输入流，用于从键盘读取数据，也可以被==重定向==为从文件中读取数据。\ncout对应于标准输出流，用于向屏幕输出数据，也可以==被重定==为向为向文件写入数据。\ncerr对应于标准错误输出流，用于向屏幕输出出错信息\nclog对应于标准错误输出流，用于向屏幕输出出错信息\ncerr和clog的区别在于cerr不使用缓冲区，直接向显示器输出信息;而输出到clog中的信息先会被存放在缓冲区，缓冲区满或者刷新时才输出到屏幕。")]),t._v(" "),e("h3",{attrs:{id:"输出重定向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输出重定向"}},[t._v("#")]),t._v(" 输出重定向")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('#include<iostream>\nusing namespace std;\nint main()\n{\n    int x,y;\n    cin>>x>>y;\n    freopen("test.txt","w",stdout);//将标准输出重定向到test.txt文件\n    if(y==0)\n        cerr<"error."<<endl;\n    else\n        cout<<x/y;//输出结果到test.txt\n}\n')])])]),e("h3",{attrs:{id:"输入重定向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入重定向"}},[t._v("#")]),t._v(" 输入重定向")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('#include<iostream>\nusing namespace std;\nint main()\n{\n\tdouble f;\n\tint n;\n\tfreopen("t.txt","r",stdin);\n\tcin>>f>>n;\n\tcout<<f<<","<<n<<endl;\n}\n')])])]),e("h2",{attrs:{id:"istream类的成员函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#istream类的成员函数"}},[t._v("#")]),t._v(" istream类的成员函数")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("bool eof();//判断输入流是否结束\nint peek();//返回下一个字符，但不从流中去掉\nistream& putback(char c);//将字符c放回输入流\nistream& ignore(int nCount=1,int delim=EOF);//从流中删掉最多nCount个字符，遇到EOF时结束\n")])])]),e("h2",{attrs:{id:"创建文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建文件"}},[t._v("#")]),t._v(" 创建文件")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('#include<iostream>//包含头文件\nofstream outFile("clients.dat",ios::out|ios::binart);\n')])])]),e("ul",[e("li",[t._v('"clients.dat"\t要创建的文件的名字')]),t._v(" "),e("li",[t._v("ios::out \t\t\t文件打开方式\n"),e("ul",[e("li",[t._v("ios::out  \t输出到文件，删除原有内容")]),t._v(" "),e("li",[t._v("ios::app\t输出到文件，保留原有内容，总是在尾部添加")])])]),t._v(" "),e("li",[t._v("ios::binary\t    以二进制文件格式打开文件")])]),t._v(" "),e("p",[t._v("也可以先创建ofstream对象，再用open函数打开")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('ofstream fout;\nfout.open("test.out",ios::out|ios::binary);\n')])])]),e("p",[t._v("判断打开是否成功：")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('if(!fout)\n    cout<<"File open error!"<<endl;\n')])])]),e("p",[t._v("文件名可以给出绝对路径，也可以给出相对路径。")]),t._v(" "),e("p",[t._v("没有交代路径信息，就是在当前文件夹下找文件。")]),t._v(" "),e("h2",{attrs:{id:"文件的读写指针"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件的读写指针"}},[t._v("#")]),t._v(" 文件的读写指针")]),t._v(" "),e("ul",[e("li",[t._v("对于输入文件，有一个读指针；")]),t._v(" "),e("li",[t._v("对于输出文件，有一个写指针；")]),t._v(" "),e("li",[t._v("对于输入输出文件，有一个读写指针；")]),t._v(" "),e("li",[t._v("表示文件操作的当前位置，该指针在哪里，读写操作就在哪里进行")])]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('ofstream fout("a1.out",ios::app);//以添加方式打开\nlong location=fout.tellp();//取得写指针位置\nlocation=10;\nfout.seekp(location);//将写指针移动到第十个字节处\nfout.seekp(location,ios::beg);//从头数location\nfout.seekp(location,ios::cur);//从当前位置数location\nfout.seekp(location,ios::end);//从尾部数location\n//location可以为负值\n')])])]),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('ifstream fin("a1.in",ios::ate);//打开文件，定位文件指针到文件尾\nlong location=fin.tellg();//取得读指针的位置\nlocation=10L;\nfout.seekg(location);//将读指针移动到第十个字节处\nfout.seekg(location,ios::beg);//从头数location\nfout.seekg(location,ios::cur);//从当前位置数location\nfout.seekg(location,ios::end);//从尾部数location\n//location可以为负值\n')])])]),e("p",[t._v("关闭文件 xxx.close();")])])}),[],!1,null,null,null);a.default=n.exports}}]);