(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{357:function(t,a,e){"use strict";e.r(a);var _=e(42),v=Object(_.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h4",{attrs:{id:"数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),e("h3",{attrs:{id:"mysql服务的启动和停止"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql服务的启动和停止"}},[t._v("#")]),t._v(" MySQL服务的启动和停止")]),t._v(" "),e("p",[t._v("net stop")]),t._v(" "),e("p",[t._v("net start")]),t._v(" "),e("h3",{attrs:{id:"mysql服务端的登录和退出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql服务端的登录和退出"}},[t._v("#")]),t._v(" MySQL服务端的登录和退出")]),t._v(" "),e("p",[t._v("法一：通过MySQL自带的客户端")]),t._v(" "),e("p",[t._v("只限于root用户")]),t._v(" "),e("p",[t._v("方式二：")]),t._v(" "),e("p",[t._v("通过Windows自带的客户端")]),t._v(" "),e("p",[e("code",[t._v("mysql [-h主机名 -P端口号] -u用户名 -p密码")])]),t._v(" "),e("p",[e("code",[t._v("mysql -uroot -p")])]),t._v(" "),e("p",[t._v("退出:exit或ctrl+c")]),t._v(" "),e("h3",{attrs:{id:"mysql常见命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql常见命令"}},[t._v("#")]),t._v(" MySQL常见命令")]),t._v(" "),e("p",[t._v("查看当前所有数据库:"),e("code",[t._v("show database;")])]),t._v(" "),e("p",[t._v("打开指定的库:"),e("code",[t._v("use 库名")])]),t._v(" "),e("p",[t._v("查看当前库的所有表"),e("code",[t._v("show tables;")])]),t._v(" "),e("p",[t._v("查看其他库的所有表:"),e("code",[t._v("show tables from 库名")])]),t._v(" "),e("p",[e("code",[t._v("select database();")]),t._v(" 查看当前所在库")]),t._v(" "),e("p",[t._v("创建表:")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t列名 列类型"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    列明 列类型"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" stuinfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("查看表结构:"),e("code",[t._v("desc stuindo;")])]),t._v(" "),e("p",[t._v("看表中有哪些数据")]),t._v(" "),e("p",[e("code",[t._v("select * from stuinfo")]),t._v(";")]),t._v(" "),e("p",[e("code",[t._v("insert into stuinfo(id,name) values(1,'john');")])]),t._v(" "),e("p",[t._v("修改 "),e("code",[t._v("update stuintfo set name ='lilei' where id=1;")])]),t._v(" "),e("p",[t._v("删除 "),e("code",[t._v("delete from stuinfo where id=1;")])]),t._v(" "),e("p",[t._v("查看服务器版本")]),t._v(" "),e("p",[t._v("方式一:登录到mysql客户端")]),t._v(" "),e("p",[e("code",[t._v("select version();")])]),t._v(" "),e("p",[t._v("方式二:没有登录到mysql客户端")]),t._v(" "),e("p",[e("code",[t._v("mysql --version")])]),t._v(" "),e("p",[t._v("或")]),t._v(" "),e("p",[e("code",[t._v("mysql --V")])]),t._v(" "),e("h3",{attrs:{id:"mysql语法规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql语法规范"}},[t._v("#")]),t._v(" MySQL语法规范")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("不区分大小写，但建议关键字大写， 表名，列名小写")])]),t._v(" "),e("li",[e("p",[t._v("每条命令最好用分号结尾")])]),t._v(" "),e("li",[e("p",[t._v("每条命令根据需要，可以进行缩进或换行")])]),t._v(" "),e("li",[e("p",[t._v("注释")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#单行注释\n-- 注释文字（有空格）\n/*\n多行注释\n*/\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"dql语言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dql语言"}},[t._v("#")]),t._v(" DQL语言")]),t._v(" "),e("p",[t._v("Data Query language数据库查询语言")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#基础查询\n语法：\nselect 查询列表 from 表名;\n")])])]),e("p",[t._v("特点：")]),t._v(" "),e("ul",[e("li",[t._v("查询列表可以是：表中的字段、常量值、表达式、函数")]),t._v(" "),e("li",[t._v("查询的结果是一个虚拟的表格")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("查询表中的单个字段")]),t._v(" "),e("p",[e("code",[t._v("select last_name form employees;")])])]),t._v(" "),e("li",[e("p",[t._v("查询表中的多个字段\n"),e("code",[t._v("select last_name,salary,email form employees;")])])]),t._v(" "),e("li",[e("p",[t._v("查询表中的所有字段")]),t._v(" "),e("p",[e("code",[t._v("select * from employees;")])])]),t._v(" "),e("li",[e("p",[t._v("查询常量值")]),t._v(" "),e("p",[e("code",[t._v("SELECT 100;")])]),t._v(" "),e("p",[e("code",[t._v("SELECT 'john';")])])]),t._v(" "),e("li",[e("p",[t._v("查询表达式")]),t._v(" "),e("p",[e("code",[t._v("SELECT 100*98;")])])]),t._v(" "),e("li",[e("p",[t._v("查询函数")]),t._v(" "),e("p",[e("code",[t._v("SELECT VERSION();")])])]),t._v(" "),e("li",[e("p",[t._v("起别名")]),t._v(" "),e("p",[e("code",[t._v("SELECT ... AS ...")])]),t._v(" "),e("p",[e("code",[t._v("select lastname 姓")])]),t._v(" "),e("ul",[e("li",[t._v("便于理解")]),t._v(" "),e("li",[t._v("如果要查询的字段有重名的情况，使用别名可以区分开来")])])]),t._v(" "),e("li",[e("p",[t._v("去重")]),t._v(" "),e("p",[e("code",[t._v("SELECT DISTINCT ... from ...")])])]),t._v(" "),e("li",[e("p",[t._v("+的作用:运算符")]),t._v(" "),e("ul",[e("li",[t._v("两个操作数都为数值型，则做加法运算")]),t._v(" "),e("li",[t._v("其中一方为字符型，试图将字符型数值转换成数值型")]),t._v(" "),e("li",[t._v("如果转换成功，则继续做加法运算")]),t._v(" "),e("li",[t._v("如果转换失败，则将字符型数值转换成0")]),t._v(" "),e("li",[t._v("只要其中一方为null，则结果肯定为null")])]),t._v(" "),e("p",[t._v("例：查询员工名和姓连接成一个字段，并显示成姓名")]),t._v(" "),e("p",[e("s",[t._v("SELECT last_name+first_name as 姓名 from employees;")])])])]),t._v(" "),e("p",[e("code",[t._v("select concat(last_name,first_name) as 姓名")])]),t._v(" "),e("p",[t._v("ifnull(cc,0)")]),t._v(" "),e("h2",{attrs:{id:"条件查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件查询"}},[t._v("#")]),t._v(" 条件查询")]),t._v(" "),e("h3",{attrs:{id:"语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法：")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\t查询列表\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\t表名\t\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\t筛选条件"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\t\n")])])]),e("p",[t._v("分类：")]),t._v(" "),e("ul",[e("li",[t._v("按条件表达式筛选\n条件表达式：> \t< \t= \t!= \t<>\t>=\t<=")]),t._v(" "),e("li",[t._v("按逻辑表达式筛选\n逻辑运算符：&&||\t!\nand or not")]),t._v(" "),e("li",[t._v("模糊查询\n"),e("ul",[e("li",[t._v("like")]),t._v(" "),e("li",[t._v("between and")]),t._v(" "),e("li",[t._v("in")]),t._v(" "),e("li",[t._v("is null")])])])]),t._v(" "),e("h4",{attrs:{id:"按条件表达式筛选"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#按条件表达式筛选"}},[t._v("#")]),t._v(" 按条件表达式筛选")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[t._v("查询工资"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12000")]),t._v("的员工信息\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\temployees\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\tsalary"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------------")]),t._v("\n查询部门编号不等于"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("号的员工名和部门编号\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\tlast_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tdepartment_id\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\temployees\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\tdepartment_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h4",{attrs:{id:"按逻辑表达式筛选"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#按逻辑表达式筛选"}},[t._v("#")]),t._v(" 按逻辑表达式筛选")]),t._v(" "),e("h4",{attrs:{id:"模糊查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模糊查询"}},[t._v("#")]),t._v(" 模糊查询")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[t._v("查询员工名中包含字符a的员工信息\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\temployees\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\tlast_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%a%'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------------------------------")]),t._v("\n查询员工名中第二个字符为_的员工名——用\\转义\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\temployees\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\tlast_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_\\_%'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_$_%'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ESCAPE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#把$设为转义字符")]),t._v("\n")])])]),e("p",[t._v("like特点:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("一般和通配符配合使用")]),t._v(" "),e("p",[t._v("通配符:% 任意多个字符，包含0个字符")]),t._v(" "),e("p",[t._v("​\t\t\t_ 任意单个字符")])])]),t._v(" "),e("p",[t._v("between and")]),t._v(" "),e("ul",[e("li",[t._v("可以提高语句简洁度")]),t._v(" "),e("li",[t._v("包含临界值")]),t._v(" "),e("li",[t._v("两个临界值不能不要调换顺序")])]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#查询员工编号在100到120之间的元素信息\nSELECT\n\t*\nFROM\n\temployees\nWHERE\n\temployee_id BETWEEN 100 AND 120;\n")])])]),e("h4",{attrs:{id:"in"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#in"}},[t._v("#")]),t._v(" in")]),t._v(" "),e("p",[t._v("判断某字段的值是否属于in列表中的某一项")]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ul",[e("li",[t._v("提高语句简洁度")]),t._v(" "),e("li",[t._v("in列表的值类型必须一致或兼容")]),t._v(" "),e("li",[t._v("不能使用通配符")])]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#查询员工的工种编号是IT_PROG、AD_VP、AD_PRES中的一个员工名和工种编号\nSELECT\n\tlast_name,\n\tjob_id,\nFROM\n\temployees\nWHERE\n\tjob_id IN('IT_PROG','AD_VP','AD_PRES');\n")])])]),e("h4",{attrs:{id:"is-null"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#is-null"}},[t._v("#")]),t._v(" is null")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT\n\tlast_name,\n\tjob_id,\nFROM\n\temployees\nWHERE\n\tcommission_pct IS NULL;\n\tIS NOT NULL;\n")])])]),e("h4",{attrs:{id:"安全等于"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全等于"}},[t._v("#")]),t._v(" 安全等于<=>")]),t._v(" "),e("p",[t._v("xxx<=>null;")]),t._v(" "),e("p",[t._v("IS NULL:仅仅可以判断NULL值，可读性较高，建议使用\n<=>:既可以判断NULL值，又可以判断普通的数值，可读性较低")]),t._v(" "),e("h3",{attrs:{id:"排序查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排序查询"}},[t._v("#")]),t._v(" 排序查询")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 查询列表\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表\n【"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 筛选条件】\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 排序列表【"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asc")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v("】\n")])])]),e("p",[t._v("特点:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("asc代表升序、desc代表降序")]),t._v(" "),e("p",[t._v("如果不写，默认是升序")]),t._v(" "),e("p",[t._v("按别名、表达式、函数、多个字段排序")])]),t._v(" "),e("li",[e("p",[t._v("order by子句中可以支持单个字段、多个字段、表达式、函数、别名")])]),t._v(" "),e("li",[e("p",[t._v("order by子句一般是放在查询语句的最后面，limit子句除外")])])]),t._v(" "),e("h2",{attrs:{id:"常见函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见函数"}},[t._v("#")]),t._v(" 常见函数")]),t._v(" "),e("p",[t._v("功能：类似Java的方法，将一组逻辑语句封装在方法体中，对外暴露方法名")]),t._v(" "),e("p",[t._v("好处：")]),t._v(" "),e("ol",[e("li",[t._v("隐藏了实现细节")]),t._v(" "),e("li",[t._v("提高代码的重用性")])]),t._v(" "),e("p",[t._v("调用："),e("code",[t._v("select 函数名() 【from 表】;")])]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ol",[e("li",[t._v("函数名")]),t._v(" "),e("li",[t._v("函数功能")])]),t._v(" "),e("p",[t._v("分类：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("单行函数")]),t._v(" "),e("p",[t._v("如concat、length、ifnull等")])]),t._v(" "),e("li",[e("p",[t._v("分组函数")]),t._v(" "),e("p",[t._v("功能:做统计使用、又称为统计函数、聚合函数、组函数")])])]),t._v(" "),e("h3",{attrs:{id:"单行函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单行函数"}},[t._v("#")]),t._v(" 单行函数")]),t._v(" "),e("ul",[e("li",[t._v("字符函数")]),t._v(" "),e("li",[t._v("数学函数")]),t._v(" "),e("li",[t._v("日期函数")]),t._v(" "),e("li",[t._v("其他函数【补充】")]),t._v(" "),e("li",[t._v("流程控制函数【补充】")])]),t._v(" "),e("h4",{attrs:{id:"字符函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符函数"}},[t._v("#")]),t._v(" 字符函数")]),t._v(" "),e("h4",{attrs:{id:"length"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#length"}},[t._v("#")]),t._v(" length")]),t._v(" "),e("p",[t._v("获取参数值的字节个数")]),t._v(" "),e("h4",{attrs:{id:"concat拼接字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#concat拼接字符串"}},[t._v("#")]),t._v(" concat拼接字符串")]),t._v(" "),e("p",[e("code",[t._v("SELECT CONCAT(last_name,'_',first_name) 姓名 FROM employees;")])]),t._v(" "),e("h4",{attrs:{id:"upper、lower"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#upper、lower"}},[t._v("#")]),t._v(" upper、lower")]),t._v(" "),e("p",[e("code",[t._v("SELECT UPPER('john');")])]),t._v(" "),e("h4",{attrs:{id:"substr、substring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#substr、substring"}},[t._v("#")]),t._v(" substr、substring")]),t._v(" "),e("p",[t._v("注意：索引从1开始")]),t._v(" "),e("p",[e("code",[t._v("SELECT SUBSTR('1234567'，6) out_put;")])]),t._v(" "),e("p",[e("code",[t._v("SELECT SUBSTR('1234567'，1，3) out_put;")]),t._v("123")]),t._v(" "),e("h4",{attrs:{id:"instr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instr"}},[t._v("#")]),t._v(" instr")]),t._v(" "),e("p",[t._v("返回字串 第一次出现的索引，如果找不到返回0")]),t._v(" "),e("p",[e("code",[t._v("INSTR('1234','34');")]),t._v("3")]),t._v(" "),e("h4",{attrs:{id:"trim去掉前后的字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#trim去掉前后的字符"}},[t._v("#")]),t._v(" trim去掉前后的字符")]),t._v(" "),e("p",[e("code",[t._v("trim(' solfj ')")])]),t._v(" "),e("p",[e("code",[t._v("trim('a' from 'aaaaaaaaa出aaaaaaaa绝健康的aaaaaaaaaaaaaaa')")])]),t._v(" "),e("h4",{attrs:{id:"lpad用指定的字符实现左填充指定的长度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lpad用指定的字符实现左填充指定的长度"}},[t._v("#")]),t._v(" lpad用指定的字符实现左填充指定的长度")]),t._v(" "),e("p",[e("code",[t._v("SELECT LPAD （’asdf',2,'*') as out_put;")])]),t._v(" "),e("h4",{attrs:{id:"rpad"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rpad"}},[t._v("#")]),t._v(" rpad")]),t._v(" "),e("h4",{attrs:{id:"replace-替换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replace-替换"}},[t._v("#")]),t._v(" replace 替换")]),t._v(" "),e("p",[e("code",[t._v("SELECT REPLCE('张无忌爱上了周芷若','周芷若','赵敏') as out_put;")])]),t._v(" "),e("p",[t._v("---------\x3e张无忌爱上了赵敏")]),t._v(" "),e("h3",{attrs:{id:"数学函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数学函数"}},[t._v("#")]),t._v(" 数学函数")]),t._v(" "),e("h4",{attrs:{id:"round-四舍五入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#round-四舍五入"}},[t._v("#")]),t._v(" round 四舍五入")]),t._v(" "),e("p",[e("code",[t._v("SELECT ROUND(-1.45);")])]),t._v(" "),e("p",[e("code",[t._v("SELECT ROUND(-1.567,2);")])]),t._v(" "),e("h4",{attrs:{id:"celi-向上取整"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#celi-向上取整"}},[t._v("#")]),t._v(" celi 向上取整")]),t._v(" "),e("p",[t._v("返回大于等于该参数的最小整数")]),t._v(" "),e("p",[t._v("1.52---\x3e2")]),t._v(" "),e("h4",{attrs:{id:"floor向下取整"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floor向下取整"}},[t._v("#")]),t._v(" floor向下取整")]),t._v(" "),e("p",[t._v("<=")]),t._v(" "),e("h4",{attrs:{id:"truncate-截断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#truncate-截断"}},[t._v("#")]),t._v(" truncate 截断")]),t._v(" "),e("p",[e("code",[t._v("SELECT TRUNCATE(1.699999,1);")]),t._v("1.6")]),t._v(" "),e("h4",{attrs:{id:"取余"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取余"}},[t._v("#")]),t._v(" 取余")]),t._v(" "),e("p",[e("code",[t._v("MOD(a,b)")]),t._v("---\x3e"),e("code",[t._v("a-a/b*b")])]),t._v(" "),e("p",[e("code",[t._v("SELECT MOD(-10,3)")])]),t._v(" "),e("p",[e("code",[t._v("SELECT 10%3;")])]),t._v(" "),e("h3",{attrs:{id:"日期函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期函数"}},[t._v("#")]),t._v(" 日期函数")]),t._v(" "),e("h4",{attrs:{id:"now"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#now"}},[t._v("#")]),t._v(" now")]),t._v(" "),e("p",[t._v("返回当前系统日期+时间")]),t._v(" "),e("p",[e("code",[t._v("SELECT NOW()")])]),t._v(" "),e("h4",{attrs:{id:"curdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#curdate"}},[t._v("#")]),t._v(" curdate")]),t._v(" "),e("p",[t._v("返回当前系统日期，不包含时间")]),t._v(" "),e("p",[e("code",[t._v("SELECT CURDATE();")])]),t._v(" "),e("h4",{attrs:{id:"curtime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#curtime"}},[t._v("#")]),t._v(" curtime")]),t._v(" "),e("p",[t._v("返回当前时间，不包含日期")]),t._v(" "),e("p",[t._v("SELECT CURTIME();")]),t._v(" "),e("h4",{attrs:{id:"可以获取指定的部分-年、月、日、小时、分钟、秒"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可以获取指定的部分-年、月、日、小时、分钟、秒"}},[t._v("#")]),t._v(" 可以获取指定的部分，年、月、日、小时、分钟、秒")]),t._v(" "),e("p",[e("code",[t._v("SELECT YEAR(NOW()) 年;")])]),t._v(" "),e("p",[e("code",[t._v("SELECT YEAR('1998-1-1') 年;")])]),t._v(" "),e("p",[e("code",[t._v("SELECT YEAR(hiredate) 年 FROM employees;")])]),t._v(" "),e("p",[e("code",[t._v("SELECT MONTH(NOW()) 月;")])]),t._v(" "),e("p",[e("code",[t._v("SELECT MONTHNAME(NOW()) 月;")])]),t._v(" "),e("h4",{attrs:{id:"str-to-date"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#str-to-date"}},[t._v("#")]),t._v(" str_to_date")]),t._v(" "),e("p",[t._v("将日期格式的字符转换成指定格式的日期")]),t._v(" "),e("p",[t._v("`STR_TO_DATE('9-13-1999','%m-%d-%Y')")]),t._v(" "),e("h4",{attrs:{id:"date-format"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#date-format"}},[t._v("#")]),t._v(" date_format")]),t._v(" "),e("p",[t._v("将日期转换成字符")]),t._v(" "),e("p",[e("code",[t._v("DATE_FORMAT('2018/6/6','%Y年%m月%d日')")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("格式符")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("%Y")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("四位的年份")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("%y")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("二位的年份")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("%m")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("月份(01,02...11,12)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("%c")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("月份(1,2,...11,12)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("%d")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("日(01,02...)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("%H")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("小时（24小时制）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("%h")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("小时（12小时制）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("%i")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("分钟(00,01...59)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("%s")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("秒(00,01...59)")])])])]),t._v(" "),e("p",[t._v("相差天数DATEDIFF")]),t._v(" "),e("h3",{attrs:{id:"其他函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他函数"}},[t._v("#")]),t._v(" 其他函数")]),t._v(" "),e("p",[t._v("SELECT VERSION();")]),t._v(" "),e("p",[t._v("SELECT DATABASE();")]),t._v(" "),e("p",[t._v("SELECT USER();")]),t._v(" "),e("h3",{attrs:{id:"流程控制函数、"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流程控制函数、"}},[t._v("#")]),t._v(" 流程控制函数、")]),t._v(" "),e("ol",[e("li",[t._v("if函数： if else 的效果")])]),t._v(" "),e("p",[e("code",[t._v("SELECT IF(10<5,'大','小');")])]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\tc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("case函数")]),t._v(" "),e("p",[t._v("使用一")])])]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("case 要判断的字段或表达式\nwhen 常量1 then 要显示的值1或语句1;\nwhen 常量2 then 要显示的值2或语句2;\n...\nelse 要显示的值n或语句n;\nend\n\n\n部门号=30，显示的工资为1.1倍\n部门号=40，显示的工资为1.2倍\n部门号=50，显示的工资为1.3倍\n其他部门，显示的工资为原工资\nSELECT salary 原始工资,department_id,\nCASE department_id\nWHEN 30 THEN salary*1.1\nWHEN 40 THEN salary*1.2\nWHEN 50 THEN salary*1.3\nELSE salary\nEND AS 新工资\nFROM employees;\n")])])]),e("p",[t._v("使用二：类似于 多重if")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("case \nwhen 条件1 then 要显示的值1或语句1\nwhen 条件2 then 要显示的值2或语句2\n。。。\nelse 要显示的值n或语句n\nend\n\n#案例：查询员工的工资的情况\n如果工资>20000,显示A级别\n如果工资>15000,显示B级别\n如果工资>10000，显示C级别\n否则，显示D级别\n\n\nSELECT salary,\nCASE \nWHEN salary>20000 THEN 'A'\nWHEN salary>15000 THEN 'B'\nWHEN salary>10000 THEN 'C'\nELSE 'D'\nEND AS 工资级别\nFROM employees;\n\n")])])]),e("h3",{attrs:{id:"分组函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分组函数"}},[t._v("#")]),t._v(" 分组函数")]),t._v(" "),e("p",[t._v("功能：用作统计使用，又称为聚合函数或统计函数或组函数")]),t._v(" "),e("p",[t._v("分类：\nsum 求和、avg 平均值、max 最大值 、min 最小值 、count 计算个数")]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("sum、avg一般用于处理数值型\nmax、min、count可以处理任何类型")])]),t._v(" "),e("li",[e("p",[t._v("以上分组函数都忽略null值")])]),t._v(" "),e("li",[e("p",[t._v("可以和distinct搭配实现去重的运算")])]),t._v(" "),e("li",[e("p",[t._v("count函数的单独介绍")]),t._v(" "),e("p",[t._v("一般使用count(*)用作统计行数")])]),t._v(" "),e("li",[e("p",[t._v("和分组函数一同查询的字段要求是group by后的字段count")])])]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT COUNT(salary) FROM employees;\n\n\nSELECT COUNT(*) FROM employees;\n\nSELECT COUNT(1) FROM employees;\n\n效率：\nMYISAM存储引擎下  ，COUNT(*)的效率高\nINNODB存储引擎下，COUNT(*)和COUNT(1)的效率差不多，比COUNT(字段)要高一些\n")])])]),e("h3",{attrs:{id:"分组查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分组查询"}},[t._v("#")]),t._v(" 分组查询")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select 查询列表\nfrom 表\n【where 筛选条件】\ngroup by 分组的字段\n【order by 排序的字段】;\n")])])]),e("p",[t._v("特点：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("和分组函数一同查询的字段必须是group by后出现的字段")])]),t._v(" "),e("li",[e("p",[t._v("筛选分为两类：分组前筛选和分组后筛选")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}}),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("数据源")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("位置")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("连接的关键字")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("分组前筛选")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("原始表")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("group by前")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("where")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("分组后筛选")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("分组后的结果集")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("group by后")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("having")])])])]),t._v(" "),e("p",[t._v("问题1：分组函数做筛选能不能放在where后面\n答：不能，分组函数做条件肯定是放在having子句中")]),t._v(" "),e("p",[t._v("问题2：where——group by——having")]),t._v(" "),e("p",[t._v("一般来讲，能用分组前筛选的，尽量使用分组前筛选，提高效率")])]),t._v(" "),e("li",[e("p",[t._v("分组可以按单个字段也可以按多个字段")])]),t._v(" "),e("li",[e("p",[t._v("可以搭配着排序使用")])])]),t._v(" "),e("h3",{attrs:{id:"连接查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接查询"}},[t._v("#")]),t._v(" 连接查询")]),t._v(" "),e("p",[t._v("含义：又称多表查询，当查询的字段来自于多个表时，就会用到连接查询")]),t._v(" "),e("p",[t._v("笛卡尔乘积现象：表1 有m行，表2有n行，结果=m*n行")]),t._v(" "),e("p",[t._v("发生原因：没有有效的连接条件\n如何避免：添加有效的连接条件")]),t._v(" "),e("p",[t._v("分类：")]),t._v(" "),e("ul",[e("li",[t._v("按年代分类：\n"),e("ul",[e("li",[t._v("sql92标准:仅仅支持内连接")]),t._v(" "),e("li",[t._v("sql99标准【推荐】：支持内连接+外连接（左外和右外）+交叉连接")])])]),t._v(" "),e("li",[t._v("按功能分类：\n"),e("ul",[e("li",[t._v("内连接：\n"),e("ul",[e("li",[t._v("等值连接")]),t._v(" "),e("li",[t._v("非等值连接")]),t._v(" "),e("li",[t._v("自连接")])])]),t._v(" "),e("li",[t._v("外连接：\n"),e("ul",[e("li",[t._v("左外连接")]),t._v(" "),e("li",[t._v("右外连接")]),t._v(" "),e("li",[t._v("全外连接")])])]),t._v(" "),e("li",[t._v("交叉连接")])])])]),t._v(" "),e("h3",{attrs:{id:"自连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自连接"}},[t._v("#")]),t._v(" 自连接")]),t._v(" "),e("h3",{attrs:{id:"sql99语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql99语法"}},[t._v("#")]),t._v(" sql99语法")]),t._v(" "),e("p",[t._v("语法：")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select 查询列表\nfrom 表1 别名 【连接类型】\njoin 表2 别名 \non 连接条件\n【where 筛选条件】\n【group by 分组】\n【having 筛选条件】\n【order by 排序列表】\n")])])]),e("p",[t._v("分类：")]),t._v(" "),e("ul",[e("li",[t._v("内连接（★）：inner")]),t._v(" "),e("li",[t._v("外连接\n"),e("ul",[e("li",[t._v("左外(★):left 【outer】")]),t._v(" "),e("li",[t._v("右外(★)：right 【outer】")]),t._v(" "),e("li",[t._v("全外：full【outer】")])])]),t._v(" "),e("li",[t._v("交叉连接：cross")])]),t._v(" "),e("h4",{attrs:{id:"内连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内连接"}},[t._v("#")]),t._v(" 内连接")]),t._v(" "),e("p",[t._v("语法：")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select 查询列表\nfrom 表1 别名\ninner join 表2 别名\non 连接条件;\n")])])]),e("p",[t._v("分类：")]),t._v(" "),e("ul",[e("li",[t._v("等值")]),t._v(" "),e("li",[t._v("非等值")]),t._v(" "),e("li",[t._v("自连接")])]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ol",[e("li",[t._v("添加排序、分组、筛选")]),t._v(" "),e("li",[t._v("inner可以省略")]),t._v(" "),e("li",[t._v("筛选条件放在where后面，连接条件放在on后面，提高分离性，便于阅读")]),t._v(" "),e("li",[t._v("inner join连接和sql92语法中的等值连接效果是一样的，都是查询多表的交集")])]),t._v(" "),e("p",[t._v("应用场景：用于查询一个表中有，另一个表没有的记录")]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("外连接的查询结果为主表中的所有记录")]),t._v(" "),e("p",[t._v("​\t如果从表中有和它匹配的，则显示匹配的值")]),t._v(" "),e("p",[t._v("​\t如果从表中没有和它匹配的，则显示null")]),t._v(" "),e("p",[t._v("​\t外连接查询结果=内连接结果+主表中有而从表没有的记录")])]),t._v(" "),e("li",[e("p",[t._v("左外连接，left join左边的是主表\n右外连接，right join右边的是主表")])]),t._v(" "),e("li",[e("p",[t._v("左外和右外交换两个表的顺序，可以实现同样的效果")])]),t._v(" "),e("li",[e("p",[t._v("全外连接=内连接的结果+表1中有但表2没有的+表2中有但表1没有的")])])]),t._v(" "),e("h4",{attrs:{id:"交叉连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#交叉连接"}},[t._v("#")]),t._v(" 交叉连接")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" SELECT b.*,bo.\n FROM beauty b\n CROSS JOIN boys bo;\n")])])]),e("h4",{attrs:{id:"sql92和-sql99pk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql92和-sql99pk"}},[t._v("#")]),t._v(" sql92和 sql99pk")]),t._v(" "),e("ul",[e("li",[t._v("功能：sql99支持的较多")]),t._v(" "),e("li",[t._v("可读性：sql99实现连接条件和筛选条件的分离，可读性较高")])]),t._v(" "),e("h3",{attrs:{id:"子查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[t._v("#")]),t._v(" 子查询")]),t._v(" "),e("h4",{attrs:{id:"含义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#含义"}},[t._v("#")]),t._v(" 含义：")]),t._v(" "),e("p",[t._v("出现在其他语句中的select语句，称为子查询或内查询")]),t._v(" "),e("p",[t._v("外部的查询语句，称为主查询或外查询")]),t._v(" "),e("p",[t._v("分类：")]),t._v(" "),e("ul",[e("li",[t._v("按子查询出现的位置：\n"),e("ul",[e("li",[t._v("select后面：\n"),e("ul",[e("li",[t._v("仅仅支持标量子查询")])])]),t._v(" "),e("li",[t._v("from后面：\n"),e("ul",[e("li",[t._v("支持表子查询")])])]),t._v(" "),e("li",[t._v("where或having后面：★\n"),e("ul",[e("li",[t._v("标量子查询（单行） √")]),t._v(" "),e("li",[t._v("列子查询  （多行） √")]),t._v(" "),e("li",[t._v("行子查询")])])]),t._v(" "),e("li",[t._v("exists后面（相关子查询）\n"),e("ul",[e("li",[t._v("表子查询")])])])])]),t._v(" "),e("li",[t._v("按结果集的行列数不同：\n"),e("ul",[e("li",[t._v("标量子查询（结果集只有一行一列）")]),t._v(" "),e("li",[t._v("列子查询（结果集只有一列多行）")]),t._v(" "),e("li",[t._v("行子查询（结果集有一行多列）")]),t._v(" "),e("li",[t._v("表子查询（结果集一般为多行多列）")])])])]),t._v(" "),e("h5",{attrs:{id:"where或having后面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#where或having后面"}},[t._v("#")]),t._v(" where或having后面")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("标量子查询（单行子查询）")])]),t._v(" "),e("li",[e("p",[t._v("列子查询（多行子查询）")])]),t._v(" "),e("li",[e("p",[t._v("行子查询（多列多行）")])])]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("子查询放在小括号内")])]),t._v(" "),e("li",[e("p",[t._v("子查询一般放在条件的右侧")])]),t._v(" "),e("li",[e("p",[t._v("标量子查询，一般搭配着单行操作符使用")]),t._v(" "),e("p",[e("code",[t._v("> < >= <= = <>")])]),t._v(" "),e("p",[t._v("列子查询，一般搭配着多行操作符使用")]),t._v(" "),e("p",[t._v("in、any/some、all")])]),t._v(" "),e("li",[e("p",[t._v("子查询的执行优先于主查询执行，主查询的条件用到了子查询的结果")])])]),t._v(" "),e("p",[t._v("行子查询（结果集一行多列或多行多列）")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#案例：查询员工编号最小并且工资最高的员工信息\nSELECT * \nFROM employees\nWHERE (employee_id,salary)=(\n\tSELECT MIN(employee_id),MAX(salary)\n\tFROM employees\n);\n")])])]),e("h5",{attrs:{id:"select后面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#select后面"}},[t._v("#")]),t._v(" select后面")]),t._v(" "),e("p",[t._v("不会")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#案例：查询每个部门的员工个数\nSELECT d.*,(\n\n\tSELECT COUNT(*)\n\tFROM employees e\n\tWHERE e.department_id = d.`department_id`\n ) 个数\n FROM departments d;\n")])])]),e("h5",{attrs:{id:"from后面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#from后面"}},[t._v("#")]),t._v(" from后面")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#案例：查询每个部门的平均工资的工资等级\n#①查询每个部门的平均工资\nSELECT AVG(salary),department_id\nFROM employees\nGROUP BY department_id\n\n\nSELECT * FROM job_grades;\n\n\n#②连接①的结果集和job_grades表，筛选条件平均工资 between lowest_sal and highest_sal\n\nSELECT  ag_dep.*,g.`grade_level`\nFROM (\n\tSELECT AVG(salary) ag,department_id\n\tFROM employees\n\tGROUP BY department_id\n) ag_dep\nINNER JOIN job_grades g\nON ag_dep.ag BETWEEN lowest_sal AND highest_sal;\n\n\n")])])]),e("h4",{attrs:{id:"exist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exist"}},[t._v("#")]),t._v(" exist")]),t._v(" "),e("h4",{attrs:{id:"分页查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),e("p",[e("code",[t._v("limit offset,size")])]),t._v(" "),e("p",[t._v("offset要显示条目的其实索引（从0开始）")]),t._v(" "),e("p",[t._v("size要显示的条目个数")]),t._v(" "),e("p",[t._v("放在查询语句的最后")]),t._v(" "),e("p",[t._v("要显示的页数page，每页的条目数size")]),t._v(" "),e("p",[t._v("limit (page-1)*size,size)")]),t._v(" "),e("h4",{attrs:{id:"联合查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#联合查询"}},[t._v("#")]),t._v(" 联合查询")]),t._v(" "),e("p",[t._v("union 联合 合并：将多条查询语句的结果合并成一个结果")]),t._v(" "),e("p",[t._v("语法：")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("查询语句1\nunion\n查询语句2\nunion\n...\n")])])]),e("p",[t._v("应用场景：\n要查询的结果来自于多个表，且多个表没有直接的连接关系，但查询的信息一致时")]),t._v(" "),e("p",[t._v("特点：★")]),t._v(" "),e("ol",[e("li",[t._v("要求多条查询语句的查询列数是一致的！")]),t._v(" "),e("li",[t._v("要求多条查询语句的查询的每一列的类型和顺序最好一致")]),t._v(" "),e("li",[t._v("union关键字默认去重，如果使用union all 可以包含重复项")])]),t._v(" "),e("h3",{attrs:{id:"插入语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插入语句"}},[t._v("#")]),t._v(" 插入语句")]),t._v(" "),e("h4",{attrs:{id:"方式一-经典的插入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方式一-经典的插入"}},[t._v("#")]),t._v(" 方式一：经典的插入")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("语法：")]),t._v(" "),e("p",[t._v("insert into 表名(列名,...) values(值1,...);")])])]),t._v(" "),e("ol",[e("li",[t._v("插入的值的类型要与列的类型一致或兼容")]),t._v(" "),e("li",[t._v("不可以为null的列必须插入值。")]),t._v(" "),e("li",[t._v("列数和值的个数必须一致")]),t._v(" "),e("li",[t._v("可以省略列名，默认所有列，而且列的顺序和表中列的顺序一致")])]),t._v(" "),e("h4",{attrs:{id:"方式二"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方式二"}},[t._v("#")]),t._v(" 方式二")]),t._v(" "),e("p",[t._v("语法：\ninsert into 表名\nset 列名=值,列名=值,..")]),t._v(" "),e("p",[t._v("INSERT INTO beauty\nSET id=19,NAME='刘涛',phone='999';")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("方式一支持插入多行,方式二不支持")])]),t._v(" "),e("li",[e("p",[t._v("方式一支持子查询，方式二不支持")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("INSERT INTO beauty(id,NAME,phone)\nSELECT 26,'宋茜','11809866';\n\nINSERT INTO beauty(id,NAME,phone)\nSELECT id,boyname,'1234567'\nFROM boys WHERE id<3;\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"修改语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改语句"}},[t._v("#")]),t._v(" 修改语句")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("修改单表的记录★")]),t._v(" "),e("p",[t._v("语法：")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("update 表名\nset 列=新值,列=新值,...\nwhere 筛选条件;\n")])])])]),t._v(" "),e("li",[e("p",[t._v("修改多表的记录【补充】")]),t._v(" "),e("p",[t._v("语法：")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sql92语法：\nupdate 表1 别名,表2 别名\nset 列=值,...\nwhere 连接条件\nand 筛选条件;\n\nsql99语法：\nupdate 表1 别名\ninner|left|right join 表2 别名\non 连接条件\nset 列=值,...\nwhere 筛选条件;\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"删除语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除语句"}},[t._v("#")]),t._v(" 删除语句")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("方式一：delete\n语法：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("单表的删除【★】\ndelete from 表名 where 筛选条件")])]),t._v(" "),e("li",[e("p",[t._v("多表的删除【补充】")])])]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sql92语法：\ndelete 表1的别名,表2的别名\nfrom 表1 别名,表2 别名\nwhere 连接条件\nand 筛选条件;\n\nsql99语法：\n\ndelete 表1的别名,表2的别名\nfrom 表1 别名\ninner|left|right join 表2 别名 on 连接条件\nwhere 筛选条件;\n\n")])])])]),t._v(" "),e("li",[e("p",[t._v("方式二：truncate")]),t._v(" "),e("p",[t._v("语法：truncate table 表名;")])])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("delete 可以加where 条件，truncate不能加")])]),t._v(" "),e("li",[e("p",[t._v("truncate删除，效率高一丢丢")])]),t._v(" "),e("li",[e("p",[t._v("假如要删除的表中有自增长列，如果用delete删除后，再插入数据，自增长列的值从断点开始，而truncate删除后，再插入数据，自增长列的值从1开始。")])]),t._v(" "),e("li",[e("p",[t._v("truncate删除没有返回值，delete删除有返回值")])]),t._v(" "),e("li",[e("p",[t._v("truncate删除不能回滚，delete删除可以回滚.")])])]),t._v(" "),e("h3",{attrs:{id:"数据定义语言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据定义语言"}},[t._v("#")]),t._v(" 数据定义语言")]),t._v(" "),e("h4",{attrs:{id:"库和表的管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#库和表的管理"}},[t._v("#")]),t._v(" 库和表的管理")]),t._v(" "),e("p",[t._v("库的管理")]),t._v(" "),e("p",[t._v("创建、修改、删除")]),t._v(" "),e("p",[t._v("表的管理")]),t._v(" "),e("p",[t._v("创建、修改、删除")]),t._v(" "),e("p",[t._v("创建： create\n修改： alter\n删除： drop")]),t._v(" "),e("h4",{attrs:{id:"库的管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#库的管理"}},[t._v("#")]),t._v(" 库的管理")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("库的创建")]),t._v(" "),e("p",[t._v("语法：\n"),e("code",[t._v("create database [if not exists]库名;")])])])]),t._v(" "),e("h5",{attrs:{id:"库的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#库的修改"}},[t._v("#")]),t._v(" 库的修改")]),t._v(" "),e("p",[e("code",[t._v("RENAME DATABASE books TO 新库名;")])]),t._v(" "),e("p",[t._v("更改库的字符集")]),t._v(" "),e("p",[e("code",[t._v("ALTER DATABASE books CHARACTER SET gbk;")])]),t._v(" "),e("p",[t._v("库的删除")]),t._v(" "),e("p",[e("code",[t._v("DROP DATABASE IF EXISTS books;")])]),t._v(" "),e("h4",{attrs:{id:"表的管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表的管理"}},[t._v("#")]),t._v(" 表的管理")]),t._v(" "),e("h5",{attrs:{id:"表的创建-★"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表的创建-★"}},[t._v("#")]),t._v(" 表的创建 ★")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("语法：\ncreate table 表名(\n\t列名 列的类型【(长度) 约束】,\n\t列名 列的类型【(长度) 约束】,\n\t列名 列的类型【(长度) 约束】,\n\t...\n\t列名 列的类型【(长度) 约束】\n)\n")])])]),e("h5",{attrs:{id:"表的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表的修改"}},[t._v("#")]),t._v(" 表的修改")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("语法\nalter table 表名 add|drop|modify|change column 列名 【列类型 约束】;\n")])])]),e("ol",[e("li",[e("p",[t._v("修改列名\n"),e("code",[t._v("ALTER TABLE book CHANGE COLUMN publishdate pubDate DATETIME;")])])]),t._v(" "),e("li",[e("p",[t._v("修改列的类型或约束")]),t._v(" "),e("p",[e("code",[t._v("ALTER TABLE book MODIFY COLUMN pubdate TIMESTAMP;")])])]),t._v(" "),e("li",[e("p",[t._v("添加新列\n"),e("code",[t._v("ALTER TABLE author ADD COLUMN annual DOUBLE;")])])]),t._v(" "),e("li",[e("p",[t._v("删除列")]),t._v(" "),e("p",[e("code",[t._v("ALTER TABLE book_author DROP COLUMN annual;")])])]),t._v(" "),e("li",[e("p",[t._v("修改表名")]),t._v(" "),e("p",[e("code",[t._v("ALTER TABLE author RENAME TO book_author;")])])])]),t._v(" "),e("h5",{attrs:{id:"表的删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表的删除"}},[t._v("#")]),t._v(" 表的删除")]),t._v(" "),e("p",[e("code",[t._v("DROP TABLE 【IF EXISTS】 表名;")])]),t._v(" "),e("h5",{attrs:{id:"表的复制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表的复制"}},[t._v("#")]),t._v(" 表的复制")]),t._v(" "),e("p",[t._v("仅仅复制表的结构")]),t._v(" "),e("p",[e("code",[t._v("CREATE TABLE copy LIKE author;")])]),t._v(" "),e("p",[t._v("复制表的结构+数据")]),t._v(" "),e("p",[e("code",[t._v("CREATE TABLE copy2 SELECT * FROM author;")])]),t._v(" "),e("p",[t._v("只复制部分数据")]),t._v(" "),e("p",[e("code",[t._v("CREATE TABLE copy3 SELECT id,au_name FROM author WHERE nation='中国';")])]),t._v(" "),e("p",[t._v("仅仅复制某些字段")]),t._v(" "),e("p",[e("code",[t._v("CREATE TABLE copy4 SELECT id,au_name FROM author WHERE 0;")]),t._v("( 1=2)(where null)")]),t._v(" "),e("h3",{attrs:{id:"数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),e("ul",[e("li",[t._v("数值型：\n"),e("ul",[e("li",[t._v("整型")]),t._v(" "),e("li",[t._v("小数：\n"),e("ul",[e("li",[t._v("定点数")]),t._v(" "),e("li",[t._v("浮点数")])])])])]),t._v(" "),e("li",[t._v("字符型：\n"),e("ul",[e("li",[t._v("较短的文本：char、varchar")]),t._v(" "),e("li",[t._v("较长的文本：text、blob（较长的二进制数据）")])])]),t._v(" "),e("li",[t._v("日期型：")])]),t._v(" "),e("h4",{attrs:{id:"整型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("分类")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("字节")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("tinyint")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("smallint")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("2")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("mediumint")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("3")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("int/integer")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("4")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("bigint")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("8")])])])]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("如果不设置无符号还是有符号，默认是有符号，如果想设置无符号，需要添加unsigned关键字")])]),t._v(" "),e("li",[e("p",[t._v("如果插入的数值超出了整型的范围,会报out of range异常，并且插入临界值")])]),t._v(" "),e("li",[e("p",[t._v("如果不设置长度，会有默认的长度\n长度代表了显示的最大宽度，如果不够会用0在左边填充，但必须搭配zerofill使用！")])]),t._v(" "),e("li",[e("p",[t._v("如何设置无符号和有符号")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("DROP TABLE IF EXISTS tab_int;\nCREATE TABLE tab_int(\n\tt1 INT(7) ZEROFILL,\n\tt2 INT(7) ZEROFILL,//默认无符号\n    t2 INT(7) UNSIGNED,\n);\n")])])])])]),t._v(" "),e("h5",{attrs:{id:"小数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小数"}},[t._v("#")]),t._v(" 小数")]),t._v(" "),e("p",[t._v("分类：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("浮点型")]),t._v(" "),e("ul",[e("li",[t._v("float(M,D)")]),t._v(" "),e("li",[t._v("double(M,D)")])]),t._v(" "),e("p",[t._v("2.定点型")]),t._v(" "),e("ul",[e("li",[t._v("dec(M，D)")]),t._v(" "),e("li",[t._v("decimal(M,D)")])])])]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("M：整数部位+小数部位\nD：小数部位\n如果超过范围，则插入临界值")])]),t._v(" "),e("li",[e("p",[t._v("M和D都可以省略\n如果是decimal，则M默认为10，D默认为0\n如果是float和double，则会根据插入的数值的精度来决定精度")])]),t._v(" "),e("li",[e("p",[t._v("定点型的精确度较高，如果要求插入数值的精度较高如货币运算等则考虑使用")])])]),t._v(" "),e("p",[t._v("所选择的类型越简单越好，能保存数值的类型越小越好")]),t._v(" "),e("h4",{attrs:{id:"字符型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符型"}},[t._v("#")]),t._v(" 字符型")]),t._v(" "),e("ul",[e("li",[t._v("较短的文本：\n"),e("ul",[e("li",[t._v("char")]),t._v(" "),e("li",[t._v("varchar")])])]),t._v(" "),e("li",[t._v("其他：\n"),e("ul",[e("li",[t._v("binary和varbinary用于保存较短的二进制")]),t._v(" "),e("li",[t._v("enum用于保存枚举")]),t._v(" "),e("li",[t._v("set用于保存集合")])])]),t._v(" "),e("li",[t._v("较长的文本：\n"),e("ul",[e("li",[t._v("text")]),t._v(" "),e("li",[t._v("blob(较大的二进制)")])])])]),t._v(" "),e("p",[t._v("特点:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th"),t._v(" "),e("th",[t._v("写法")]),t._v(" "),e("th",[t._v("M的意思")]),t._v(" "),e("th",[t._v("特点")]),t._v(" "),e("th",[t._v("空间的耗费")]),t._v(" "),e("th",[t._v("效率")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("char")]),t._v(" "),e("td",[t._v("char(M)")]),t._v(" "),e("td",[t._v("最大的字符数，可以省略，默认为1")]),t._v(" "),e("td",[t._v("固定长度的字符")]),t._v(" "),e("td",[t._v("比较耗费")]),t._v(" "),e("td",[t._v("高")])]),t._v(" "),e("tr",[e("td",[t._v("varchar")]),t._v(" "),e("td",[t._v("varchar(M)")]),t._v(" "),e("td",[t._v("最大的字符数不可省略")]),t._v(" "),e("td",[t._v("可变长度的字符")]),t._v(" "),e("td",[t._v("比较节省")]),t._v(" "),e("td",[t._v("低")])])])]),t._v(" "),e("h5",{attrs:{id:"enum类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#enum类型"}},[t._v("#")]),t._v(" Enum类型")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("CREATE TABLE tab_char(\n\tc1 ENUM('a','b','c')\n);\n")])])]),e("h5",{attrs:{id:"set类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set类型"}},[t._v("#")]),t._v(" set类型")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("CREATE TABLE tab_set(\n\ts1 SET('a','b','c','d')\n);\nINSERT INTO tab_set VALUES('a');\nINSERT INTO tab_set VALUES('A,B');\nINSERT INTO tab_set VALUES('a,c,d');\n")])])]),e("h4",{attrs:{id:"日期类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期类型"}},[t._v("#")]),t._v(" 日期类型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("日期和时间类型")]),t._v(" "),e("th",[t._v("字节")]),t._v(" "),e("th",[t._v("最小值")]),t._v(" "),e("th",[t._v("最大值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("date")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("1000-01-01")]),t._v(" "),e("td",[t._v("9999-12-31")])]),t._v(" "),e("tr",[e("td",[t._v("datetime不受时区影响")]),t._v(" "),e("td",[t._v("8")]),t._v(" "),e("td",[t._v("1000-01-01 00:00:00")]),t._v(" "),e("td",[t._v("9999-12-32 23:59:59")])]),t._v(" "),e("tr",[e("td",[t._v("timestamp受时区影响")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("19700101080001")]),t._v(" "),e("td",[t._v("2038年的某个时刻")])]),t._v(" "),e("tr",[e("td",[t._v("time")]),t._v(" "),e("td",[t._v("3")]),t._v(" "),e("td",[t._v("-838:59:59")]),t._v(" "),e("td",[t._v("838:59:59")])]),t._v(" "),e("tr",[e("td",[t._v("year")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("1901")]),t._v(" "),e("td",[t._v("2155")])])])]),t._v(" "),e("h4",{attrs:{id:"常见约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见约束"}},[t._v("#")]),t._v(" 常见约束")]),t._v(" "),e("h5",{attrs:{id:"含义-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#含义-2"}},[t._v("#")]),t._v(" 含义")]),t._v(" "),e("p",[t._v("一种限制，用于限制表中的数据，为了保证表中的数据的准确和可靠性")]),t._v(" "),e("h5",{attrs:{id:"分类-六大约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分类-六大约束"}},[t._v("#")]),t._v(" 分类：六大约束")]),t._v(" "),e("ul",[e("li",[t._v("NOT NULL：非空，用于保证该字段的值不能为空\n比如姓名、学号等")]),t._v(" "),e("li",[t._v("DEFAULT:默认，用于保证该字段有默认值\n比如性别")]),t._v(" "),e("li",[t._v("PRIMARY KEY:主键，用于保证该字段的值具有唯一性，并且非空\n比如学号、员工编号等")]),t._v(" "),e("li",[t._v("UNIQUE:唯一，用于保证该字段的值具有唯一性，可以为空\n比如座位号")]),t._v(" "),e("li",[t._v("CHECK:检查约束【mysql中不支持】\n比如年龄、性别")]),t._v(" "),e("li",[t._v("FOREIGN KEY:外键，用于限制两个表的关系，用于保证该字段的值必须来自于主表的关联列的值\n在从表添加外键约束，用于引用主表中某列的值\n比如学生表的专业编号，员工表的部门编号，员工表的工种编号")])]),t._v(" "),e("p",[t._v("添加约束的时机：")]),t._v(" "),e("ol",[e("li",[t._v("创建表时")]),t._v(" "),e("li",[t._v("修改表时")])]),t._v(" "),e("p",[t._v("约束的添加分类：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("列级约束：")]),t._v(" "),e("p",[t._v("六大约束语法上都支持，但外键约束没有效果")])]),t._v(" "),e("li",[e("p",[t._v("表级约束：")]),t._v(" "),e("p",[t._v("除了非空、默认，其他的都支持")])])]),t._v(" "),e("h5",{attrs:{id:"列级约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列级约束"}},[t._v("#")]),t._v(" 列级约束")]),t._v(" "),e("p",[t._v("语法：")]),t._v(" "),e("p",[t._v("直接在字段名和类型后面追加 约束类型即可。")]),t._v(" "),e("p",[t._v("只支持：默认、非空、主键、唯一")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("CREATE TABLE stuinfo(\n\tid INT PRIMARY KEY,#主键\n\tstuName VARCHAR(20) NOT NULL UNIQUE,#非空\n\tgender CHAR(1) CHECK(gender='男' OR gender ='女'),#检查,不支持\n\tseat INT UNIQUE,#唯一\n\tage INT DEFAULT  18,#默认约束\n\tmajorId INT REFERENCES major(id)#外键，不支持\n\n);\n\n\nCREATE TABLE major(\n\tid INT PRIMARY KEY,\n\tmajorName VARCHAR(20)\n);\n")])])]),e("p",[t._v("查看stuinfo中的所有索引，包括主键、外键、唯一\nSHOW INDEX FROM stuinfo;")]),t._v(" "),e("h4",{attrs:{id:"表级约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表级约束"}},[t._v("#")]),t._v(" 表级约束")]),t._v(" "),e("p",[t._v("语法：在各个字段的最下面")]),t._v(" "),e("p",[t._v("【constraint 约束名】 约束类型(字段名)")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("DROP TABLE IF EXISTS stuinfo;\nCREATE TABLE stuinfo(\n\tid INT,\n\tstuname VARCHAR(20),\n\tgender CHAR(1),\n\tseat INT,\n\tage INT,\n\tmajorid INT,\n\t\n\tCONSTRAINT pk PRIMARY KEY(id),#主键\n\tCONSTRAINT uq UNIQUE(seat),#唯一键\n\tCONSTRAINT ck CHECK(gender ='男' OR gender  = '女'),#检查\n\tCONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id)#外键\n\t\n);\nSHOW INDEX FROM stuinfo;\n")])])]),e("h5",{attrs:{id:"通用的写法-★"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通用的写法-★"}},[t._v("#")]),t._v(" 通用的写法：★")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("CREATE TABLE IF NOT EXISTS stuinfo(\n\tid INT PRIMARY KEY,\n\tstuname VARCHAR(20),\n\tsex CHAR(1),\n\tage INT DEFAULT 18,\n\tseat INT UNIQUE,\n\tmajorid INT,\n\tCONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id)\n);\n")])])]),e("h4",{attrs:{id:"修改表时添加约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改表时添加约束"}},[t._v("#")]),t._v(" 修改表时添加约束")]),t._v(" "),e("p",[t._v("1、添加列级约束\nalter table 表名 modify column 字段名 字段类型 新约束;")]),t._v(" "),e("p",[t._v("2、添加表级约束\nalter table 表名 add 【constraint 约束名】 约束类型(字段名) 【外键的引用】;")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("DROP TABLE IF EXISTS stuinfo;\nCREATE TABLE stuinfo(\n\tid INT,\n\tstuname VARCHAR(20),\n\tgender CHAR(1),\n\tseat INT,\n\tage INT,\n\tmajorid INT\n)\nDESC stuinfo;\n#1.添加非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20)  NOT NULL;\n#2.添加默认约束\nALTER TABLE stuinfo MODIFY COLUMN age INT DEFAULT 18;\n#3.添加主键\n#①列级约束\nALTER TABLE stuinfo MODIFY COLUMN id INT PRIMARY KEY;\n#②表级约束\nALTER TABLE stuinfo ADD PRIMARY KEY(id);\n#4.添加唯一\n#①列级约束\nALTER TABLE stuinfo MODIFY COLUMN seat INT UNIQUE;\n#②表级约束\nALTER TABLE stuinfo ADD UNIQUE(seat);\n#5.添加外键\nALTER TABLE stuinfo ADD CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id); \n")])])]),e("h4",{attrs:{id:"修改表时删除约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改表时删除约束"}},[t._v("#")]),t._v(" 修改表时删除约束")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#1.删除非空约束\nALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NULL;\n#2.删除默认约束\nALTER TABLE stuinfo MODIFY COLUMN age INT ;\n#3.删除主键\nALTER TABLE stuinfo DROP PRIMARY KEY;\n#4.删除唯一\nALTER TABLE stuinfo DROP INDEX seat;\n#5.删除外键\nALTER TABLE stuinfo DROP FOREIGN KEY fk_stuinfo_major;\n")])])]),e("h3",{attrs:{id:"标识列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标识列"}},[t._v("#")]),t._v(" 标识列")]),t._v(" "),e("p",[t._v("又称为自增长列")]),t._v(" "),e("p",[t._v("含义：可以不用手动的插入值，系统提供默认的序列值")]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ol",[e("li",[t._v("标识列必须和主键搭配吗？不一定，但要求是一个key")]),t._v(" "),e("li",[t._v("一个表可以有几个标识列？至多一个！")]),t._v(" "),e("li",[t._v("标识列的类型只能是数值型")]),t._v(" "),e("li",[t._v("标识列可以通过 "),e("code",[t._v("SET auto_increment_increment=3;")]),t._v("设置步长可以通过 手动插入值，设置起始值")])]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#一、创建表时设置标识列\nDROP TABLE IF EXISTS tab_identity;\nCREATE TABLE tab_identity(\n\tid INT  ,\n\tNAME FLOAT UNIQUE AUTO_INCREMENT,\n\tseat INT \n);\nTRUNCATE TABLE tab_identity;\nINSERT INTO tab_identity(id,NAME) VALUES(NULL,'john');\nINSERT INTO tab_identity(NAME) VALUES('lucy');\nSELECT * FROM tab_identity;\nSHOW VARIABLES LIKE '%auto_increment%';\nSET auto_increment_increment=3;\n")])])]),e("p",[t._v("查看支持的存储引擎"),e("code",[t._v("SHOW ENGINES;")])]),t._v(" "),e("h3",{attrs:{id:"事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),e("p",[t._v("隐式事务：事务没有明显的开启和结束的标记")]),t._v(" "),e("p",[t._v("显式事务：事务具有明显的开启和结束的标记")]),t._v(" "),e("p",[t._v("前提：必须先设置自动提交功能为禁用")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("步骤1：开启事务\nset autocommit=0;\nstart transaction;可选的\n步骤2：编写事务中的sql语句(select insert update delete)\n语句1;\n语句2;\n...\n\n步骤3：结束事务\ncommit;提交事务\nrollback;回滚事务\n\nsavepoint 节点名;设置保存点\n")])])]),e("p",[t._v("truncate不能回滚")]),t._v(" "),e("h4",{attrs:{id:"事务的隔离级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事务的隔离级别"}},[t._v("#")]),t._v(" 事务的隔离级别")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}}),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("脏读")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("不可重复读")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("幻读")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("read uncommitted")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("√")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("√")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("√")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("read committed")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("√")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("√")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("repeatable read")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("√")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("serializable")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("×")])])])]),t._v(" "),e("p",[t._v("mysql中默认 第三个隔离级别 repeatable read\noracle中默认第二个隔离级别 read committed\n查看隔离级别\n"),e("code",[t._v("select @@tx_isolation;")]),t._v("\n设置隔离级别\n"),e("code",[t._v("set session|global transaction isolation level 隔离级别;")])]),t._v(" "),e("h4",{attrs:{id:"演示savepoint-的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#演示savepoint-的使用"}},[t._v("#")]),t._v(" 演示savepoint 的使用")]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SET autocommit=0;\nSTART TRANSACTION;\nDELETE FROM account WHERE id=25;\nSAVEPOINT a;#设置保存点\nDELETE FROM account WHERE id=28;\nROLLBACK TO a;#回滚到保存点\n\nSELECT * FROM account;\n\n")])])]),e("h3",{attrs:{id:"视图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),e("p",[t._v("含义：虚拟表，和普通表一样使用\nmysql5.1版本出现的新特性，是通过表动态生成的数据")]),t._v(" "),e("p",[t._v("比如：舞蹈班和普通班级的对比")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}}),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("创建语法的关键字")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("是否实际占用物理空间")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("使用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("视图")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("create view")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("只是保存了sql逻辑")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("增删改查，只是一般不能增删改")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("表")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("create table")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("保存了数据")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("增删改查")])])])]),t._v(" "),e("div",{staticClass:"language-mysql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#案例：查询姓张的学生名和专业名\nSELECT stuname,majorname\nFROM stuinfo s\nINNER JOIN major m ON s.`majorid`= m.`id`\nWHERE s.`stuname` LIKE '张%';\n\nCREATE VIEW v1\nAS\nSELECT stuname,majorname\nFROM stuinfo s\nINNER JOIN major m ON s.`majorid`= m.`id`;\n\nSELECT * FROM v1 WHERE stuname LIKE '张%';\n")])])]),e("h4",{attrs:{id:"创建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[t._v("#")]),t._v(" 创建")]),t._v(" "),e("p",[e("code",[t._v("语法： create view 视图名 as 查询语句;")])]),t._v(" "),e("h4",{attrs:{id:"修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改"}},[t._v("#")]),t._v(" 修改")]),t._v(" "),e("p",[t._v("方式一：")]),t._v(" "),e("p",[e("code",[t._v("create or replace view 视图名 as 查询语句;")])]),t._v(" "),e("p",[t._v("方式二：\n"),e("code",[t._v("语法： alter view 视图名 as 查询语句;")])]),t._v(" "),e("h4",{attrs:{id:"删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[t._v("#")]),t._v(" 删除")]),t._v(" "),e("p",[t._v("语法："),e("code",[t._v("drop view 视图名,视图名,...;")])]),t._v(" "),e("h4",{attrs:{id:"查看"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看"}},[t._v("#")]),t._v(" 查看")]),t._v(" "),e("p",[e("code",[t._v("DESC myv3;")])]),t._v(" "),e("p",[e("code",[t._v("SHOW CREATE VIEW myv3;")])]),t._v(" "),e("h5",{attrs:{id:"视图的更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#视图的更新"}},[t._v("#")]),t._v(" 视图的更新")]),t._v(" "),e("p",[t._v("具备以下特点的视图不允许更新")]),t._v(" "),e("p",[t._v("包含以下关键字的sql语句：分组函数、distinct、group  by、having、union或者union all")])])}),[],!1,null,null,null);a.default=v.exports}}]);